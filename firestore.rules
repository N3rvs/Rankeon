rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
    }

    match /teams/{teamId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && (get(/databases/$(database)/documents/teams/$(teamId)).data.ownerId == request.auth.uid || isAdmin());
    }

    match /conversations/{conversationId} {
        allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
        
        match /messages/{messageId} {
            allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        }
    }

    match /friend_requests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.fromId;
      allow read: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow update: if request.auth.uid == get(/databases/$(database)/documents/friend_requests/$(requestId)).data.toId;
      allow delete: if request.auth.uid == get(/databases/$(database)/documents/friend_requests/$(requestId)).data.toId;
    }

    match /notifications/{notificationId} {
      // Only server actions can create notifications. Client can't.
      allow create: if false; 
      // User can read, update (mark as read), and delete their own notifications.
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      // Allow list query for the user's own notifications
      allow list: if request.auth.uid == request.query.userId;
    }
  }
}
