rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isTeamFounder(teamId) {
      return get(/databases/$(database)/documents/teams/$(teamId)).data.ownerId == request.auth.uid;
    }
    
    function isTeamStaff(teamId) {
      // Correctly checks for role within the team's 'members' map
      return get(/databases/$(database)/documents/teams/$(teamId)).data.members[request.auth.uid] in ['owner', 'coach', 'admin'];
    }

    // USERS
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      // Correctly use isTeamStaff with the user's teamId
      allow update: if isOwner(userId) || (resource.data.teamId != null && isTeamStaff(resource.data.teamId));
      allow delete: if false;
    }

    // TEAMS
    match /teams/{teamId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isTeamFounder(teamId);
      allow delete: if isTeamFounder(teamId);
    }
    
    match /teamMembers/{membershipId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if isTeamFounder(get(/databases/$(database)/documents/teamMembers/$(membershipId)).data.teamId);
        allow update: if isTeamStaff(get(/databases/$(database)/documents/teamMembers/$(membershipId)).data.teamId);
    }
    
    // OTHER COLLECTIONS
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
