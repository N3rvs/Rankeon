rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- General Admin Rule ---
    // Admins can read/write anything.
    match /{document=**} {
      allow read, write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Any authenticated user can read profiles or list users (for market).
      allow read, list: if request.auth != null;
      
      // A user can create their own profile record.
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // A user can update their own profile, but cannot change their role.
      // Admins can update any profile via the global rule.
      allow update: if request.auth != null && 
                      (request.auth.uid == userId && request.resource.data.role == resource.data.role);
      
      // Deletion is not allowed for safety.
      allow delete: if false;
    }
    
    // --- Teams Collection ---
    match /teams/{teamId} {
      // Any authenticated user can read team data.
      allow read, list: if request.auth != null;
      // Any authenticated user can create a team.
      allow create: if request.auth != null;
      // Only the team owner or an admin can update or delete the team.
      allow update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    // --- Conversations & Messages ---
    match /conversations/{conversationId} {
      // Allow access if the user is a participant.
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantIds;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;

      match /messages/{messageId} {
        // Allow read if user is a participant of the parent conversation.
        allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
        // Allow create if user is the sender and a participant of the parent conversation.
        allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
        // Messages are immutable.
        allow update, delete: if false;
      }
    }
    
    // --- Notifications Collection ---
    match /notifications/{notificationId} {
      // User can only read their own notifications.
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // User can update their own notification (e.g., to mark as read).
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      // Creation/deletion is handled server-side.
      allow create, delete: if false;
    }

    // --- Friend Requests Collection ---
    match /friend_requests/{requestId} {
       // Only participants of the request can read it.
       allow read: if request.auth != null && request.auth.uid in resource.data.participantIds;
       
       // Creation/deletion/update is handled server-side by admin actions.
       allow create, update, delete: if false;
    }
  }
}
