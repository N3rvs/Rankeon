rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their own profile, admins can read any.
    // Users can update their own profile, but not change their role.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && request.resource.data.role == resource.data.role;
    }
    
    // Admins can write anything to a user doc (e.g. change role)
    match /users/{userId} {
       allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // A user can see the full list of users if they are an admin.
    match /users/{userId} {
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Teams collection
    match /teams/{teamId} {
      allow read: if request.auth != null;
      allow list: if request.auth != null;
      // Add rules for write later
    }

    // Chats collection
    match /chats/{chatId} {
      // Only members of the chat can read/write to it
      allow read, write: if request.auth != null && request.auth.uid in resource.data.members;
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        // Only the sender can delete their own message
        allow delete: if request.auth != null && resource.data.sender == request.auth.uid;
      }
    }

    // Notifications: User can only access their own notifications in their inbox.
    match /inbox/{userId}/notifications/{notificationId} {
      allow read, list, write: if request.auth != null && request.auth.uid == userId;
    }

    // Friend Requests: Only participants can read/write
    match /friend_requests/{requestId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
    }
  }
}
