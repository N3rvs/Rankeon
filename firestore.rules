rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    function isAdmin() {
      return isSignedIn() && getRole(request.auth.uid) == 'admin';
    }

    function isModerator() {
      return isSignedIn() && (getRole(request.auth.uid) == 'admin' || getRole(request.auth.uid) == 'moderator');
    }
    
    function isTeamStaff(teamId) {
        let teamData = get(/databases/$(database)/documents/teams/$(teamId)).data;
        let userRoleInTeam = teamData.members[request.auth.uid];
        return userRoleInTeam == 'owner' || userRoleInTeam == 'coach';
    }

    // Matches
    match /users/{userId} {
      allow read: if true;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if (isSignedIn() && isOwner(userId)) || (isModerator() && !(userId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles)) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /honorStats/{userId} {
      allow read: if true;
      allow create, update, delete: if false; // Managed by backend functions
    }
    
    match /honorsGiven/{giverId}_{recipientId} {
        allow read: if isSignedIn() && (request.auth.uid == giverId || request.auth.uid == recipientId);
        allow create, update: if isSignedIn() && request.auth.uid == giverId;
        allow delete: if false;
    }

    match /teams/{teamId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && isTeamStaff(teamId);
      allow delete: if isSignedIn() && get(/databases/$(database)/documents/teams/$(teamId)).data.ownerId == request.auth.uid;
    }

    match /teamApplications/{applicationId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && isTeamStaff(get(/databases/$(database)/documents/teamApplications/$(applicationId)).data.teamId);
      allow delete: if false;
    }
    
     match /teamInvites/{inviteId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isTeamStaff(request.resource.data.teamId);
      allow update: if isSignedIn();
      allow delete: if false;
    }
    
    match /scrims/{scrimId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn();
    }
    
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow create, update, delete: if isModerator();
      
      match /teams/{teamId} {
        allow read, create, update, delete: if isSignedIn();
      }
       match /matches/{matchId} {
        allow read: if true;
        allow create, update, delete: if isModerator();
      }
       match /schedule/{scheduleId} {
        allow read: if true;
        allow create, update, delete: if isModerator();
      }
       match /standings/{teamId} {
        allow read: if true;
        allow create, update, delete: if isModerator();
      }
    }
    
    match /tournamentProposals/{proposalId} {
      allow read: if isModerator();
      allow create: if isSignedIn();
      allow update, delete: if isModerator();
    }
    
    match /supportTickets/{ticketId} {
      allow read, update: if isSignedIn() && (request.auth.uid == resource.data.userId || isModerator());
      allow create: if isSignedIn();
      
       match /conversation/{messageId} {
          allow read, create: if isSignedIn() && (request.auth.uid == get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId || isModerator());
       }
    }
    
    match /chats/{chatId} {
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.members;
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.members;
      allow delete: if false;

      match /messages/{messageId} {
        allow read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.from;
        allow update, delete: if false;
      }
    }

    match /friendRequests/{requestId} {
      allow read, create, update: if isSignedIn();
      allow delete: if false;
    }
    
    match /friendships/{friendshipId} {
        allow read: if isSignedIn() && request.auth.uid in resource.data.users;
        allow create, delete: if isSignedIn();
        allow update: if false;
    }
    
    match /blocks/{userId}/targets/{targetId} {
      allow read, create, delete: if isOwner(userId);
      allow update: if false;
    }
    
    match /inbox/{userId}/{document=**} {
      allow read, create, update, delete: if isOwner(userId);
    }
  }
}
