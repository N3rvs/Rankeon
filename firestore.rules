rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // USERS
    // Any authenticated user can read profiles (for the market).
    // A user can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // TEAMS
    // Any authenticated user can read team data.
    // Only the owner can manage their team.
    match /teams/{teamId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if request.auth.uid == resource.data.ownerId;
    }

    // CONVERSATIONS
    // Rules for conversations and their sub-collections of messages.
    match /conversations/{conversationId} {
      // A user can read a conversation if they are a participant.
      // This works for both single documents and queries with `array-contains`.
      allow read: if request.auth.uid in resource.data.participantIds;

      // A user can create a conversation if they are listed as a participant in the new document.
      allow create: if request.auth.uid in request.resource.data.participantIds;

      // A user can update a conversation (like updating lastMessage) if they are a participant.
      allow update: if request.auth.uid in resource.data.participantIds;
      
      // For simplicity, deleting conversations is not allowed.
      allow delete: if false;

      // MESSAGES (sub-collection)
      // Rules for messages within a conversation.
      match /messages/{messageId} {
        // A user can read or create (send) messages in a conversation they are part of.
        // This uses `get()` to check the parent document's participant list.
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;

        // Updating or deleting individual messages is not allowed.
        allow update, delete: if false;
      }
    }
  }
}
