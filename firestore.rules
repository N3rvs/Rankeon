rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own profile, and other users' public profiles.
    // They can only update their own non-sensitive fields.
    match /users/{userId} {
      allow read;
      allow update: if request.auth.uid == userId && !('role' in request.resource.data);
      allow create: if request.auth.uid == userId;
    }
    
    // Admins can read/write anything in the users collection.
    match /users/{userId} where get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' {
    	allow read, write;
    }
    
    // Chat messages can be read by members of the chat.
    // Users can only create messages as themselves.
    // Users can only delete their own messages.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.members;
      
      match /messages/{messageId} {
        allow read: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow create: if request.auth.uid == request.resource.data.sender;
        allow delete: if request.auth.uid == resource.data.sender;
      }
    }
    
    // Notifications can only be accessed by the recipient.
    match /inbox/{userId}/notifications/{notificationId} {
    	allow read, write, create, delete: if request.auth.uid == userId;
    }
    
    // Friend requests can be read by participants, created by the sender, and updated by the receiver.
    match /friendRequests/{requestId} {
    	allow read: if request.auth.uid in resource.data.participantIds;
      allow create: if request.auth.uid == request.resource.data.from;
      allow update: if request.auth.uid == resource.data.to;
    }
    
  }
}
