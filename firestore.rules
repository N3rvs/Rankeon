rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      // For create or update, the user must be the owner of the document.
      allow write: if request.auth.uid == userId;
      allow delete: if false;
    }
    
    match /conversations/{conversationId} {
      // A user can read/update a conversation only if they are a participant.
      allow read, update: if request.auth.uid in resource.data.participantIds;
      // A user can create a conversation only if they are in the new participants list.
      allow create: if request.auth.uid in request.resource.data.participantIds;

      match /messages/{messageId} {
        // A user can read messages if they are part of the parent conversation.
        allow read: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        // A user can create a message if they are part of the conversation and are the sender.
        allow create: if (request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds) && (request.resource.data.senderId == request.auth.uid);
      }
    }

    match /teams/{teamId} {
      allow read: if isSignedIn();
      // For create, check the ownerId in the incoming data.
      allow create: if request.resource.data.ownerId == request.auth.uid;
      // For update, check the ownerId in the existing data.
      allow update: if resource.data.ownerId == request.auth.uid;
      allow delete: if false;
    }
  }
}
